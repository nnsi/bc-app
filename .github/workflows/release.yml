name: Release

on:
  push:
    branches:
      - release

permissions:
  contents: write

jobs:
  release:
    runs-on: windows-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install dependencies
        run: npm ci

      - name: Get version from package.json
        id: package-version
        run: |
          $version = (Get-Content package.json | ConvertFrom-Json).version
          echo "VERSION=$version" >> $env:GITHUB_OUTPUT

      - name: Build Tauri app
        run: npm run tauri build -- --no-bundle

      - name: Check if executable exists
        run: |
          if (-not (Test-Path "./src-tauri/target/release/bc.exe")) {
            Write-Error "Build failed: bc.exe not found"
            exit 1
          }
          Write-Host "Build successful: bc.exe found"

      - name: Get PR body
        id: pr-body
        shell: bash
        run: |
          # Install GitHub CLI if not available
          if ! command -v gh &> /dev/null; then
            echo "Installing GitHub CLI..."
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
            sudo apt update
            sudo apt install gh -y
          fi
          
          # Get the most recent merged PR to release branch
          PR_NUMBER=$(gh pr list --base release --state merged --limit 1 --json number -q '.[0].number')
          
          if [ -z "$PR_NUMBER" ]; then
            echo "No merged PR found"
            echo "PR_BODY=Release v${{ steps.package-version.outputs.VERSION }}" >> $GITHUB_OUTPUT
          else
            # Get PR body
            PR_BODY=$(gh pr view $PR_NUMBER --json body -q .body)
            echo "PR_BODY<<EOF" >> $GITHUB_OUTPUT
            echo "$PR_BODY" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "---" >> $GITHUB_OUTPUT
            echo "SHA: ${{ github.sha }}" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "./src-tauri/target/release/bc.exe"
          artifactErrorsFailBuild: true
          tag: v${{ steps.package-version.outputs.VERSION }}
          name: BC App v${{ steps.package-version.outputs.VERSION }}
          body: ${{ steps.pr-body.outputs.PR_BODY }}
          allowUpdates: true
          skipIfReleaseExists: true
          token: ${{ secrets.GITHUB_TOKEN }}