name: Build

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test-build:
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install frontend dependencies
        run: npm install

      - name: Build Tauri app
        run: npm run tauri build

      - name: List build outputs
        shell: pwsh
        run: |
          Write-Host "=== Release directory contents ==="
          Get-ChildItem -Path "src-tauri/target/release" -File | Where-Object { $_.Extension -eq ".exe" } | Format-Table Name, Length
          
          Write-Host "`n=== Bundle directory contents ==="
          if (Test-Path "src-tauri/target/release/bundle") {
            Get-ChildItem -Path "src-tauri/target/release/bundle" -Recurse -File | Where-Object { $_.Extension -eq ".exe" } | Format-Table FullName, Length
          }

      - name: Upload raw exe artifact
        uses: actions/upload-artifact@v4
        with:
          name: bc-executable
          path: src-tauri/target/release/bc.exe
          if-no-files-found: error

      - name: Upload installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: bc-installer
          path: src-tauri/target/release/bundle/nsis/*.exe
          if-no-files-found: error